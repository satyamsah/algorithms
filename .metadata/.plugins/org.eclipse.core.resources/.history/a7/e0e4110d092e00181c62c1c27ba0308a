


public class DoublyLinkedList {

	
	Node head;
	public class Node{
		Node prev;
		Node next;
		int val;
		

		public Node(int val){
			this.val=val;
		}
	}
	
	void insertatStart(int val){
		Node node= new Node(val);
		if(head==null){
			head=node;
		}else{
			node.next=head;
			head.prev=node;
		}
	}
	
	void insertatEnd(int val){
		Node node= new Node(val);
		Node curr=head;
		Node prev=curr;
		while(curr!=null){
			prev=curr;
			curr=curr.next;
		}
		prev.next=node;
		
	}
	void deleteatHead(){
		if(head!=null){
			head=head.next;
		}
	}
	
	void deleteatEnd(){
		Node curr=head;
		Node prev=curr.prev;
		while(curr.next!=null){
			curr=curr.next;
		}
		return curr.prev.next=null;
		
	}
	
	insertANodeatposition(int val){
		
	}
	deleteNodeatposition(int val){
		
	}
	
	void display(){
		Node curr=head;
		while(curr!=null){
			System.out.println(curr.val);
			curr=curr.next;
		}
	}
	public static void main(String[] args){
		DoublyLinkedList dlll= new DoublyLinkedList();
		
		dlll.insertatStart(20);
		dlll.remove(30);
	}
	
}
