import java.util.List;
import java.util.concurrent.CountDownLatch;

public class Tries {

	TrieNode root=null;
	class TrieNode{
		TrieNode[] children= new TrieNode[26];
		boolean isEndOfWord;
		
		public TrieNode(){
			isEndOfWord=false;
			for(int i=0;i<26;i++){
				children[i]=null;
			}
		}
	}
	
	
	void insert(String word){
		int level;
		int length=word.length();
		int index=0;
		TrieNode curr=root;
		for(level=0;level<length;level++){
			index=word.charAt(level)-'a';
			if(curr.children[index]==null){
				curr.children[index]=new TrieNode();
			}
			
		}
		curr.children[index].isEndOfWord=true;

	}
	boolean search(String word){
		int level;
		int length=word.length();
		int index=0;
		TrieNode curr=root;
		for(level=0;level<length;level++){
			index=word.charAt(level)-'a';
			if(curr.children[index]==null){
				return false;
			}
			
		}
		return true;
	}
	
	public static void main(String []args){
		Tries tries= new Tries();
		String keys[] = {"the", "a", "there", "answer", "any",
                "by", "bye", "their"};
		for (int i = 0; i < keys.length ; i++)
	            insert(keys[i]);
	}
	
	
	

}
